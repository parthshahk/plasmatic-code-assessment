service: api
frameworkVersion: "3"

custom:
    tableName: "users-table-${sls:stage}"
    tableName2: "users2-table-${sls:stage}"

provider:
    name: aws
    runtime: nodejs14.x
    stage: dev
    region: ca-central-1
    iam:
        role:
            statements:
                - Effect: Allow
                  Action:
                      - dynamodb:Query
                      - dynamodb:Scan
                      - dynamodb:GetItem
                      - dynamodb:PutItem
                      - dynamodb:UpdateItem
                      - dynamodb:DeleteItem
                  Resource:
                      - Fn::GetAtt: [UsersTable, Arn]
    environment:
        USERS_TABLE: ${self:custom.tableName}

functions:
    pet:
        handler: handler.handler
        events:
            - httpApi:
                  path: /pet/{any+}
                  method: ANY
    store:
        handler: handler.handler
        events:
            - httpApi:
                  path: /store/{any+}
                  method: ANY

resources:
    Resources:
        UsersTable:
            Type: AWS::DynamoDB::Table
            Properties:
                AttributeDefinitions:
                    - AttributeName: userId
                      AttributeType: S
                KeySchema:
                    - AttributeName: userId
                      KeyType: HASH
                BillingMode: PAY_PER_REQUEST
                TableName: ${self:custom.tableName}
        UsersTable2:
            Type: AWS::DynamoDB::Table
            Properties:
                AttributeDefinitions:
                    - AttributeName: userId
                      AttributeType: S
                KeySchema:
                    - AttributeName: userId
                      KeyType: HASH
                BillingMode: PAY_PER_REQUEST
                TableName: ${self:custom.tableName2}
